"use strict";

var _module_name_parser = _interopRequireDefault(require("./module_name_parser"));

var _mocha = require("mocha");

var _chai = require("chai");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _mocha.describe)('ModuleNameParser', function () {
  (0, _mocha.describe)('isBuiltIn', function () {
    (0, _mocha.it)('returns true for built in modules', () => {
      (0, _chai.expect)(_module_name_parser.default.isBuiltIn('fs')).to.be.true();
    });
    (0, _mocha.it)('returns false otherwise', () => {
      (0, _chai.expect)(_module_name_parser.default.isBuiltIn('other')).to.be.false();
    });
  });
  (0, _mocha.describe)('isGlobalExecutable', function () {
    (0, _mocha.it)('returns true for npm', () => {
      (0, _chai.expect)(_module_name_parser.default.isGlobalExecutable('npm')).to.be.true();
    });
    (0, _mocha.it)('returns false otherwise', () => {
      (0, _chai.expect)(_module_name_parser.default.isGlobalExecutable('other')).to.be.false();
    });
  });
  (0, _mocha.describe)('isRelative', function () {
    (0, _mocha.it)('returns true if the name starts with a dot', () => {
      (0, _chai.expect)(_module_name_parser.default.isRelative('./helper')).to.be.true();
    });
    (0, _mocha.it)('returns false otherwise', () => {
      (0, _chai.expect)(_module_name_parser.default.isRelative('other')).to.be.false();
    });
  });
  (0, _mocha.describe)('stripLoaders', function () {
    (0, _mocha.it)('returns modules without loaders untouched', () => {
      (0, _chai.expect)(_module_name_parser.default.stripLoaders('myModule')).to.eql('myModule');
    });
    (0, _mocha.it)('strips loaders from modules', () => {
      (0, _chai.expect)(_module_name_parser.default.stripLoaders('my-loader!myModule')).to.eql('myModule');
    });
    (0, _mocha.it)('strips loaders from relative modules', () => {
      (0, _chai.expect)(_module_name_parser.default.stripLoaders('my-loader!./myModule')).to.eql('./myModule');
    });
    (0, _mocha.it)('strips all loaders', () => {
      (0, _chai.expect)(_module_name_parser.default.stripLoaders('my-loader!other-loader!myModule')).to.eql('myModule');
    });
  });
  (0, _mocha.describe)('stripSubpath', function () {
    (0, _mocha.it)('returns modules without subpaths', () => {
      (0, _chai.expect)(_module_name_parser.default.stripSubpath('myModule')).to.eql('myModule');
    });
    (0, _mocha.it)('returns scoped paths with modules to modules', () => {
      (0, _chai.expect)(_module_name_parser.default.stripSubpath('@myOrg/myModule')).to.eql('@myOrg/myModule');
    });
    (0, _mocha.it)('strips subpaths into modules', () => {
      (0, _chai.expect)(_module_name_parser.default.stripSubpath('myModule/subPath')).to.eql('myModule');
    });
    (0, _mocha.it)('strips subpaths into scoped modules', () => {
      (0, _chai.expect)(_module_name_parser.default.stripSubpath('@myOrg/myModule/subPath')).to.eql('@myOrg/myModule');
    });
  });
});